# coding: utf-8
"""Waylay rules engine query parameters.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

from __future__ import annotations  # for Python 3.7â€“3.9

from pydantic import (
    ConfigDict,
)
from waylay.sdk.api._models import BaseModel as WaylayBaseModel


def _execute_actuator_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteActuatorQuery(WaylayBaseModel):
    """Model for `execute_actuator` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_actuator_query_alias_for,
        populate_by_name=True,
    )


def _execute_actuator_version_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteActuatorVersionQuery(WaylayBaseModel):
    """Model for `execute_actuator_version` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_actuator_version_query_alias_for,
        populate_by_name=True,
    )


def _execute_sensor_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteSensorQuery(WaylayBaseModel):
    """Model for `execute_sensor` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_sensor_query_alias_for,
        populate_by_name=True,
    )


def _execute_sensor_version_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteSensorVersionQuery(WaylayBaseModel):
    """Model for `execute_sensor_version` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_sensor_version_query_alias_for,
        populate_by_name=True,
    )


def _execute_transformer_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteTransformerQuery(WaylayBaseModel):
    """Model for `execute_transformer` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_transformer_query_alias_for,
        populate_by_name=True,
    )


def _execute_transformer_version_query_alias_for(field_name: str) -> str:
    return field_name


class ExecuteTransformerVersionQuery(WaylayBaseModel):
    """Model for `execute_transformer_version` query parameters."""

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
        extra="allow",
        alias_generator=_execute_transformer_version_query_alias_for,
        populate_by_name=True,
    )
