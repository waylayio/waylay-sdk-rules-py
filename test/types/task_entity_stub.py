# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.task_entity import TaskEntity

    TaskEntityAdapter = TypeAdapter(TaskEntity)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

task_entity_model_schema = json.loads(
    r"""{
  "required" : [ "ID", "createTime", "name", "network", "status", "user" ],
  "type" : "object",
  "properties" : {
    "ID" : {
      "$ref" : "#/components/schemas/TaskId"
    },
    "name" : {
      "$ref" : "#/components/schemas/TaskName"
    },
    "status" : {
      "$ref" : "#/components/schemas/TaskStatus"
    },
    "user" : {
      "$ref" : "#/components/schemas/TaskUser"
    },
    "createTime" : {
      "$ref" : "#/components/schemas/UnixEpochMillis"
    },
    "template" : {
      "$ref" : "#/components/schemas/TemplateId"
    },
    "network" : {
      "type" : "object",
      "description" : "The graph, either from the template or from the task definition. Depending on the `format` query parameter either BN or simplified format"
    },
    "resourceIds" : {
      "$ref" : "#/components/schemas/TaskResourceIds"
    }
  }
}
""",
    object_hook=with_example_provider,
)
task_entity_model_schema.update({"definitions": MODEL_DEFINITIONS})

task_entity_faker = JSF(task_entity_model_schema, allow_none_optionals=1)


class TaskEntityStub:
    """TaskEntity unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return task_entity_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "TaskEntity":
        """Create TaskEntity stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(TaskEntityAdapter.json_schema(), allow_none_optionals=1)
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return TaskEntityAdapter.validate_python(
            json, context={"skip_validation": True}
        )
