# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.version_response_status import (
        VersionResponseStatus,
    )

    VersionResponseStatusAdapter = TypeAdapter(VersionResponseStatus)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

version_response_status_model_schema = json.loads(
    r"""{
  "title" : "VersionResponse_status",
  "type" : "string",
  "example" : "STARTED",
  "enum" : [ "STARTING", "STARTED", "FAILED" ]
}
""",
    object_hook=with_example_provider,
)
version_response_status_model_schema.update({"definitions": MODEL_DEFINITIONS})

version_response_status_faker = JSF(
    version_response_status_model_schema, allow_none_optionals=1
)


class VersionResponseStatusStub:
    """VersionResponseStatus unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return version_response_status_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "VersionResponseStatus":
        """Create VersionResponseStatus stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                VersionResponseStatusAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return VersionResponseStatusAdapter.validate_python(
            json, context={"skip_validation": True}
        )
