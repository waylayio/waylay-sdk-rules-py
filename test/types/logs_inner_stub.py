# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.logs_inner import LogsInner

    LogsInnerAdapter = TypeAdapter(LogsInner)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

logs_inner_model_schema = json.loads(
    r"""{
  "title" : "Logs_inner",
  "required" : [ "level", "message", "time" ],
  "type" : "object",
  "properties" : {
    "time" : {
      "$ref" : "#/components/schemas/SO8601Timestamp"
    },
    "level" : {
      "$ref" : "#/components/schemas/Logs_inner_level"
    },
    "message" : {
      "title" : "message",
      "type" : "string",
      "example" : "SMS sent"
    }
  },
  "additionalProperties" : false
}
""",
    object_hook=with_example_provider,
)
logs_inner_model_schema.update({"definitions": MODEL_DEFINITIONS})

logs_inner_faker = JSF(logs_inner_model_schema, allow_none_optionals=1)


class LogsInnerStub:
    """LogsInner unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return logs_inner_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "LogsInner":
        """Create LogsInner stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(LogsInnerAdapter.json_schema(), allow_none_optionals=1)
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return LogsInnerAdapter.validate_python(json, context={"skip_validation": True})
