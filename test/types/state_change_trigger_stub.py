# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.state_change_trigger import StateChangeTrigger

    StateChangeTriggerAdapter = TypeAdapter(StateChangeTrigger)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

state_change_trigger_model_schema = json.loads(
    r"""{
  "description" : "A trigger that executes on state change.",
  "example" : {
    "sourceLabel" : "AND_1",
    "destinationLabel" : "debugDialog_1",
    "stateChangeTrigger" : {
      "stateFrom" : "FALSE",
      "stateTo" : "*"
    }
  },
  "allOf" : [ {
    "$ref" : "#/components/schemas/GenericTrigger"
  }, {
    "required" : [ "destinationLabel", "sourceLabel", "stateChangeTrigger" ],
    "properties" : {
      "stateChangeTrigger" : {
        "$ref" : "#/components/schemas/TriggerStateChange"
      }
    }
  } ]
}
""",
    object_hook=with_example_provider,
)
state_change_trigger_model_schema.update({"definitions": MODEL_DEFINITIONS})

state_change_trigger_faker = JSF(
    state_change_trigger_model_schema, allow_none_optionals=1
)


class StateChangeTriggerStub:
    """StateChangeTrigger unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return state_change_trigger_faker.generate()

    @classmethod
    def create_instance(cls) -> "StateChangeTrigger":
        """Create StateChangeTrigger stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return StateChangeTriggerAdapter.validate_python(cls.create_json())
