# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.stream_data_data import StreamDataData

    StreamDataDataAdapter = TypeAdapter(StreamDataData)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

stream_data_data_model_schema = json.loads(
    r"""{
  "oneOf" : [ {
    "type" : "object",
    "example" : {
      "parameterName" : "temperature",
      "value" : 23,
      "collectedTime" : 1420629467
    }
  }, {
    "type" : "array",
    "example" : [ {
      "parameterName" : "latitude",
      "value" : 51
    }, {
      "parameterName" : "longitude",
      "value" : 3.73
    } ],
    "items" : {
      "type" : "object"
    }
  } ]
}
""",
    object_hook=with_example_provider,
)
stream_data_data_model_schema.update({"definitions": MODEL_DEFINITIONS})

stream_data_data_faker = JSF(stream_data_data_model_schema, allow_none_optionals=1)


class StreamDataDataStub:
    """StreamDataData unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return stream_data_data_faker.generate()

    @classmethod
    def create_instance(cls) -> "StreamDataData":
        """Create StreamDataData stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return StreamDataDataAdapter.validate_python(cls.create_json())
