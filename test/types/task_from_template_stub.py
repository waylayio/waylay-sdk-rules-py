# coding: utf-8
"""Waylay rules engine model tests.

This code was generated from the OpenAPI documentation of 'Waylay rules engine'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.rules.models.task_from_template import TaskFromTemplate

    TaskFromTemplateAdapter = TypeAdapter(TaskFromTemplate)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

task_from_template_model_schema = json.loads(
    r"""{
  "type" : "object",
  "example" : {
    "name" : "myTask",
    "template" : "myTemplate",
    "type" : "reactive"
  },
  "allOf" : [ {
    "$ref" : "#/components/schemas/TaskSettings"
  }, {
    "required" : [ "name", "template" ],
    "properties" : {
      "start" : {
        "title" : "boolean to indicate whether task must be started after creation",
        "type" : "boolean",
        "default" : true
      },
      "template" : {
        "$ref" : "#/components/schemas/TemplateId"
      }
    }
  } ]
}
""",
    object_hook=with_example_provider,
)
task_from_template_model_schema.update({"definitions": MODEL_DEFINITIONS})

task_from_template_faker = JSF(task_from_template_model_schema, allow_none_optionals=1)


class TaskFromTemplateStub:
    """TaskFromTemplate unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return task_from_template_faker.generate()

    @classmethod
    def create_instance(cls) -> "TaskFromTemplate":
        """Create TaskFromTemplate stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return TaskFromTemplateAdapter.validate_python(cls.create_json())
